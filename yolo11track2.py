''' Tracks people and shows a tail that trails
along behind the people as they move
from https://docs.ultralytics.com/modes/track/#plotting-tracks-over-time
'''

from collections import defaultdict

import cv2
import numpy as np
import sys
from ultralytics import YOLO

model = YOLO("resources/model/yolo11s.pt")
video_input_file_name = "resources/video/vtest.avi"
video_out_file = "runs/detect/track/vtest.mp4"

cap = cv2.VideoCapture(video_input_file_name)
ok, frame = cap.read()
#Exit if video not opened
if not cap.isOpened():
    print("Could not open video")
    sys.exit()
else:
    width = int(cap.get(cv2.CAP_PROP_FRAME_WIDTH))
    height = int(cap.get(cv2.CAP_PROP_FRAME_HEIGHT))
    #fps = int(cap.get(cv2.CAP_FRAME_PER_SECOND))
    #print(fps)

video_out = cv2.VideoWriter(video_out_file, cv2.VideoWriter_fourcc(*"mp4v"), 10, (width, height))

track_history = defaultdict(lambda: [])

while cap.isOpened():
    success, frame = cap.read()
    if success:
        results = model.track(frame, persist=True)
        boxes = results[0].boxes.xywh.cpu()
        track_ids = results[0].boxes.id.int().cpu().tolist()
        annotated_frame = results[0].plot()
        for box, track_id in zip(boxes, track_ids):
            x, y, w, h = box
            track = track_history[track_id]
            track.append((float(x), float(y)))
            if len(track) > 30:
                track.pop(0)
            points = np.hstack(track).astype(np.int32).reshape((-1, 1, 2))
            cv2.polylines(annotated_frame, [points], isClosed=False, color=(230, 230, 230), thickness=10)
        cv2.imshow("YOLO11 Tracking", annotated_frame)
        video_out.write(annotated_frame)
        if cv2.waitKey(1) & 0xFF == ord("q"):
            break
    else:
        break
cap.release()
video_out.release()
cv2.destroyAllWindows()

'''NOTE:
I had to run ffmpeg to convert the video from the mp4 output generated by this program
into an HTML-compatible format using the following command at the terminal window prompt:
     ffmpeg -y -i vtest.mp4 -c:v libx264 "vtest_x264.mp4" -hide_banner -loglevel error   
ffmpeg is a media conversion tool that is NOT normally installed. Install it in to your 
virtual env following the instructions for Mac or Windows. You may need to copy the file
that is output by the above program to the cwd or change to the cwd to the location of the file
'''